version: '3.8'

services:
  # MongoDB database
  mongodb:
    image: mongo:7.0
    container_name: anybase-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD:-adminpassword}
      MONGO_INITDB_DATABASE: anybase
    volumes:
      - mongodb_data:/data/db
    networks:
      - anybase-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/anybase --quiet
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s

  # Go backend API
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    image: ghcr.io/madhouselabs/anybase-backend:latest
    container_name: anybase-backend
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      # Database configuration
      DB_CONNECTION_STRING: mongodb://admin:${MONGO_PASSWORD:-adminpassword}@mongodb:27017/anybase?authSource=admin
      DB_NAME: anybase
      
      # Server configuration
      SERVER_HOST: 0.0.0.0
      SERVER_PORT: 8080
      SERVER_MODE: production
      
      # Auth configuration
      JWT_SECRET: ${JWT_SECRET:-your-secret-key-change-in-production}
      JWT_EXPIRY: 24h
      REFRESH_TOKEN_EXPIRY: 168h
      
      # Initial admin setup (only used on first run)
      INIT_ADMIN_EMAIL: ${INIT_ADMIN_EMAIL:-admin@anybase.local}
      INIT_ADMIN_PASSWORD: ${INIT_ADMIN_PASSWORD:-admin123}
      
      # CORS configuration
      CORS_ALLOWED_ORIGINS: http://localhost:3000,http://dashboard:3000
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - anybase-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Next.js dashboard
  dashboard:
    build:
      context: ./dashboard
      dockerfile: Dockerfile
    image: ghcr.io/madhouselabs/anybase-dashboard:latest
    container_name: anybase-dashboard
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      NEXT_PUBLIC_API_URL: http://backend:8080/api/v1
      NODE_ENV: production
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - anybase-network
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/api/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1); });"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Nginx reverse proxy (optional - for production)
  nginx:
    image: nginx:alpine
    container_name: anybase-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - backend
      - dashboard
    networks:
      - anybase-network
    profiles:
      - production

volumes:
  mongodb_data:
    driver: local

networks:
  anybase-network:
    driver: bridge